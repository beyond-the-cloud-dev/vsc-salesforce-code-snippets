{
    "LWC lightning-button": {
        "body": [
            "<lightning-button variant='${1|base,neutral,brand,brand-outline,destructive,destructive-text,inverse,success|}' label='${2:label}' title='${3:title}' onclick={${4:handleOnClick}} class='${5:cssClass}'>",
            "</lightning-button>"
        ],
        "description": "lightning-button",
        "prefix": [
            "lightning-button"
        ],
        "scope": "html"
    },
    "LWC lightning-combobox": {
        "body": [
            "<lightning-combobox",
            "\tname='${1:name}'",
            "\tlabel='${2:label}'",
            "\tvalue={${3:value}}",
            "\tplaceholder='${4:placeholder}'",
            "\toptions={${5:options}}",
            "\tonchange={${6:handleChange}}",
            "></lightning-combobox>"
        ],
        "description": "lightning-combobox",
        "prefix": [
            "lightning-combobox"
        ],
        "scope": "html"
    },
    "LWC lightning-datatable": {
        "body": [
            "<lightning-datatable",
            "\tkey-field='Id'",
            "\tdata={${1:data}}",
            "\tcolumns={${2:columns}}",
            "\thide-checkbox-column",
            "></lightning-datatable>"
        ],
        "description": "lightning-datatable",
        "prefix": [
            "lightning-datatable"
        ],
        "scope": "html"
    },
    "LWC lightning-icon": {
        "body": [
            "<lightning-icon icon-name='${1:iconName}' alternative-text='${2:alternativeText}' title='${3:title}'>",
            "</lightning-icon>"
        ],
        "description": "lightning-icon",
        "prefix": [
            "lightning-icon"
        ],
        "scope": "html"
    },
    "LWC lightning-input": {
        "body": [
            "<lightning-input type='${1|checkbox,checkbox-button,date,datetime,time,email,file,password,search,tel,url,number,text,toggle|}' label='${2:label}' onchange={${3:handleOnChange}}>",
            "</lightning-input>"
        ],
        "description": "lightning-input",
        "prefix": [
            "lightning-input"
        ],
        "scope": "html"
    },
    "LWC lightning-input-field": {
        "body": [
            "<lightning-input-field field-name='${1:fieldName}' disabled read-only required>",
            "</lightning-input-field>"
        ],
        "description": "lightning-input-field ",
        "prefix": [
            "lightning-input-field "
        ],
        "scope": "html"
    },
    "LWC lightning-layout": {
        "body": [
            "<lightning-layout horizontal-align='${1|center,space,spread,end|}' vertical-align='${2|start,center,end,stretch|}' multiple-rows>",
            "\t<lightning-layout-item padding='around-small'>",
            "\t</lightning-layout-item>",
            "\t<lightning-layout-item padding='around-small'>",
            "\t</lightning-layout-item>",
            "\t<lightning-layout-item padding='around-small'>",
            "\t</lightning-layout-item>",
            "</lightning-layout>"
        ],
        "description": "lightning-layout",
        "prefix": [
            "lightning-layout"
        ],
        "scope": "html"
    },
    "LWC lightning-layout-item": {
        "body": [
            "<lightning-layout-item size='${1:size}' small-device-size='${2:smallDeviceSize}' medium-device-size='${3:mediumDeviceSize}' large-device-size='${4:largeDeviceSize}' padding='around-small'>",
            "</lightning-layout-item>"
        ],
        "description": "lightning-layout-item",
        "prefix": [
            "lightning-layout-item"
        ],
        "scope": "html"
    },
    "LWC lightning-spinner": {
        "body": [
            "<lightning-spinner alternative-text='${1:alternativeText}' size='${2|small,medium,large|}'>",
            "</lightning-spinner>"
        ],
        "description": "lightning-spinner",
        "prefix": [
            "lightning-spinner"
        ],
        "scope": "html"
    },
    "LWC lightning-tabset": {
        "body": [
            "<lightning-tabset variant='${1|default,scoped,vertical|}' active-tab-value='two'>",
            "\t<lightning-tab label='Item One' value='one'>",
            "\t\t One Content !",
            "\t</lightning-tab>",
            "\t<lightning-tab label='Item Two' value='two'>",
            "\t\t Two Content !",
            "\t</lightning-tab>",
            "\t<lightning-tab label='Item Three' value='three'>",
            "\t\t Three Content !",
            "\t</lightning-tab>",
            "</lightning-tabset>"
        ],
        "description": "lightning-tabset",
        "prefix": [
            "lightning-tabset"
        ],
        "scope": "html"
    },
    "LWC slot": {
        "body": [
            "<slot name='${1:name}'>",
            "</slot>"
        ],
        "description": "slot",
        "prefix": [
            "slot"
        ],
        "scope": "html"
    },
    "LWC template for:each": {
        "body": [
            "<template for:each={${1:array}} for:item='${2:item}'>",
            "</template>"
        ],
        "description": "Template for:each.",
        "prefix": [
            "templateForEach"
        ],
        "scope": "html"
    },
    "LWC template if:false": {
        "body": [
            "<template if:false={${1:property}}>",
            "</template>"
        ],
        "description": "Template if:false.",
        "prefix": [
            "templateIfFalse"
        ],
        "scope": "html"
    },
    "LWC template if:true": {
        "body": [
            "<template if:true={${1:property}}>",
            "</template>"
        ],
        "description": "Template if:true.",
        "prefix": [
            "templateIfTrue"
        ],
        "scope": "html"
    },
    "LWC template iterator:it": {
        "body": [
            "<template iterator:it={${1:array}}>",
            "\t<div key={it.value.Id}>",
            "\t<div if:true={it.first}></div>",
            "\t{it.value.Name}",
            "\t<div if:true={it.last}></div>",
            "\t</div>",
            "</template>"
        ],
        "description": "Template iterator:it.",
        "prefix": [
            "templateIteratorIt"
        ],
        "scope": "html"
    }
}
